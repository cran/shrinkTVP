#ifndef SAMPLE_TG_TVP_H
#define SAMPLE_TG_TVP_H


void sample_TG_TVP(const arma::vec& beta_mean,
                   const arma::vec& theta_sr,
                   arma::vec& tau2,
                   arma::vec& xi2,
                   arma::vec& tau2_til,
                   arma::vec& xi2_til,
                   arma::vec& lambda2_til,
                   arma::vec& kappa2_til,
                   double& lambda2_B,
                   double& kappa2_B,
                   double& a_xi,
                   double beta_a_xi,
                   double alpha_a_xi,
                   double& a_tau,
                   double beta_a_tau,
                   double alpha_a_tau,
                   double& d2,
                   double& e2,
                   double& c_xi,
                   double& c_tau,
                   double beta_c_xi,
                   double alpha_c_xi,
                   double beta_c_tau,
                   double alpha_c_tau,
                   bool learn_kappa2_B,
                   bool learn_lambda2_B,
                   bool learn_a_xi,
                   bool learn_a_tau,
                   bool learn_c_xi,
                   bool learn_c_tau,
                   double a_tuning_par_xi,
                   double a_tuning_par_tau,
                   double c_tuning_par_xi,
                   double c_tuning_par_tau,
                   bool a_eq_c_xi,
                   bool a_eq_c_tau,
                   const arma::vec& adaptive,
                   arma::mat& batches,
                   arma::vec& curr_sds,
                   const arma::vec& target_rates,
                   const arma::vec& max_adapts,
                   arma::ivec& batch_nrs,
                   const arma::ivec& batch_sizes,
                   arma::ivec& batch_pos,
                   int j,
                   bool& succesful,
                   std::string& fail,
                   int& fail_iter);

#endif
